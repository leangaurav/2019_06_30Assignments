

## WAF: reverse_list() that takes a list as argument and reverses the elements of the list in
## place (use indexing operations, not any function or slicing)
## Logic: if l = [1,2,3,4,5] ; result = [5,4,3,2,1]

def reverse_list(a1):
    h_ind = len(a1) - 1
    its = len(a1)//2
    for i in range(0,its):
        temp = a1[h_ind]
        a1[h_ind] = a1[i]
        a1[i] = temp
        h_ind -= 1
    return a1
print("Reveresed list :", reverse_list([10,20,80,78,99]))


o/p:

Reveresed list : [99, 78, 80, 20, 10]



## WAF: count_even_odd() that counts and returns how many numbers are even and how
## many are odd in a list of numbers passed as argument.

def count_even_odd(b1):
    co_ev = 0
    co_od = 0
    for i in b1:
        if i%2 == 0:
            co_ev += 1
        elif i%2 != 0:
            co_od += 1
    co = (co_ev,co_od)
    return co

print("count of even and odd in list is :", count_even_odd([4,6,9,3,4]))


o/p:

count of even and odd in list is : (3, 2)



## 2. WAF: maximum() to return the largest number in a list of numbers (do not use max function). 
## Function takes a list or tuple of numbers as argument.

def maximum(c1):
    max = 0
    for i in range(len(c1)):
        if c1[i] > max:
            max = c1[i]
    return max
print("maximum number is :", maximum((78,90,56,45)) )   


o/p:

maximum number is : 90



## 3. WAF: second_maximum() Create a new version of above code to return the second largest number

def second_max(b1):
    if len(b1) >= 2:
        if b1[0] > b1[1]:
            f_max = b1[0]
            s_max = b1[1]
        else:
            f_max = b1[1]
            s_max = b1[0]
        #print("Intial fmax and smax are : ", f_max,s_max)
        for i in range(2,len(b1)):
            if b1[i] > f_max:
                s_max = f_max
                f_max = b1[i]
                
            elif b1[i] > s_max:
                s_max = b1[i]
        f_s = (f_max,s_max)
        print("First and second maximum in list are :", f_s)
    else:
        print("Enter list with atleast 2 numbers ")
        
second_max([40,30,20,10])
second_max([10,20,30,40])
second_max([40,20,30,10])
second_max([-4,-3,-2,-1])

o/p:

First and second maximum in list are : (40, 30)
First and second maximum in list are : (40, 30)
First and second maximum in list are : (40, 30)
First and second maximum in list are : (-1, -2)





# In[148]:


## 4. WAF: mean() that returns the mean of list of numbers passed to the function as argument


def mean_li(e1):
    mea = 0
    su = 0
    s = len(e1)
    for i in range(len(e1)):
        su = su + e1[i]
        mea = su/s
    return mea

print("Mean of list of number is : ", mean_li([2,5,8,9]))


o/p:

Mean of list of number is :  6.0



### 5. WAF: find_in_range() that takes a three arguments: a list of numbers, start, end
## The function returns a list of numbers from the original list, which lie between start and
## end. Ex: find_in_range([3,10, 5, 8, 2, 7], 5, 9), List of numbers = [3,10, 5, 8, 2, 7]
## start = 5   end = 9  list returned should be [5, 8, 7]



def find_in_range(l,s,e):
    g1 = []
    for i in range(len(l)):
        if l[i] >= s and l[i] <= e:
            g1.append(l[i])
    return g1
print(find_in_range([3,10, 5, 8, 2, 7], 5, 9))

o/p:

[5, 8, 7]

        
        
            
    


