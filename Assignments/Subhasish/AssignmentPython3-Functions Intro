1. WAP to input 2 strings and swap the strings.

s1 = input("Enter the string:")
s2 = input("Enter the string:")
print (s1,s2)
s1,s2 = s2,s1
print (s1, s2)

Enter the string:abc
Enter the string:pqr
abc pqr
pqr abc

2. WAP to generate 4 random numbers in the range 0-26 and print their average.

from random import randint
a=randint(0,26)
b=randint(0,26)
c=randint(0,26)
d=randint(0,26)
print(a,b,c,d)
Avg = (a+b+c+d)/4
print(Avg)

17 20 1 21
14.75

3. WAP to generate and print a random uppercase or lowercase alphabet. Try these:
Create a string containing all alphabets and then select a random alphabet. Check the module string

import string, random
s=string.ascii_letters
p=random.randrange(len(s))
print(s[p])

j

4. WAF get_si() that takes Principle, Rate and Time as arguments and returns the Simple Interest.

def get_si(p,t,r):
    si= (p*t*r)/100
    return(si)
res=get_si(100,1,10)
print(res)    

​

10.0

5. WAF get_amount() that takes Principle, Rate and Time as arguments and returns the
Total amount using the get_si() function from above to calculate the SI. Also provide
Rate = 10 and Time = 1 as default arguments.

def get_amt(p,r=10,t=1):
    si=get_si(100,10,1)         #calling function from Q5
    amount=si+p
    return amount
res1=get_amt(10)
print(res1)

20.0

6. WAP get_ci() that takes Principle, Rate and Time as arguments and returns the Compound Interest.

def get_ci(p,r,t):
    ci= p*((1+(r/100))**t)
    ci= ci-p
    return ci
get_ci(10000,10,2)

2100.000000000002

7. WAP get_q_r() taking 2 numbers as parameters and returns the quotient and remainder in the form of a tuple.

def get_q_r(quotient,remainder):
    tuple=(quotient//remainder,quotient%remainder)
    return tuple
res=get_q_r(3,2)
print("the quotient and remainder are : ", res)
the quotient and remainder are :  (1, 1)

8. WAP to find the length of hypotenuse of a right angled triangle, input the height and base from user.

import math
def length(height,base):
    l=((height)**2 + (base)**2)
    return math.sqrt(l)
res=length(3,4)
print("Length of a triangle is : ",res)

Length of a triangle is :  5.0

9. WAP to input number of seconds and print in days, hours, minutes and seconds.

s= int(input('Enter a Valur : '))
# Seconds to minute
m= s//60
s= s%60

# Minutes to hr.
h=m//60
m=m%60

#hrs to days
d=h//24
h%=24
print("{}Days {}Hrs {}Minutes {}Secs".format(d,h,m,s))

Enter a Valur : 100000
1Days 3Hrs 46Minutes 40Secs

10.Check your version of python interpreter without opening the interpreter (Which command needs to be used on the command line).

Python --version

11. Find output:

x=2
x*=3
x=x%4
y=-x
print(x,y)

2 -2

12. Find Output:

def funct():
    pass
print(funct())

None

13. Doubt

14. Doubt

15.

## Add()

​

def add(re1,im1,re2,im2):
    complex1=complex(re1)
    complex2=complex(im1)
    complex3=complex(re2)
    complex4=complex(im2)
    tuple=(complex1 + complex3 , complex2 + complex4)
    return tuple
add(10,20,5,-30)

((15+0j), (-10+0j))

## Sub()

​

def sub(re1,im1,re2,im2):
    complex1=complex(re1)
    complex2=complex(im1)
    complex3=complex(re2)
    complex4=complex(im2)
    tuple=(complex1 - complex3 , complex2 - complex4)
    return tuple
sub(10,20,5,-30)

((5+0j), (50+0j))

16.

## conj(re, im): returns the conjugate as a tuple

​

def conj(re,im):
    n=complex(re,im)
    tuple=(n.conjugate())
    return tuple
conj(15,5)   

(15-5j)

## mul(re1, im1, re2, im2): returns the product of 2 complex numbers

​

def mul(re1,im1,re2,im2):
    n1=complex(re1,im1)
    n2=complex(re2,im2)
    mul=n1*n2
    return mul
mul(10,5,5,3)

(35+55j)

## div(re1, im1, re2, im2): returns the division of 2 complex numbers as a tuple.

​

def div(re1, im1, re2, im2):
    complex1=complex(re1)
    complex2=complex(im1)
    complex3=complex(re2)
    complex4=complex(im2)
    tuple=(complex1/complex3 , complex2/complex4)
    return tuple
div(10,2,12,3)

((0.8333333333333334+0j), (0.6666666666666666+0j))