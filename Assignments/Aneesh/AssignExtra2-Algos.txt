1>
Q:
WAF: reverse_list() that takes a list as argument and reverses the elements of the list in
place (use indexing operations, not any function or slicing)
Logic: if l = [1,2,3,4,5] ; result = [5,4,3,2,1]
1 2 3 4 5 # string
0 1 2 3 4 # indexes
start index = 0, end index = 4; swap the elements at index 0,4
[5,2,3,4,1]
start index = 1, end index = 3; swap the elements at index 1,3
[5,4,3,2,1]
Index start index 2 is not less than end index 2. Hence no need to go forward
A:
def reverse_list(a):
    l = len(a) - 1
    i = 0
    for i in range(0,l):
        if i < l:
            t = a[l]
            a[l] = a[i]
            a[i] = t
            i += 1
            l -= 1
    print (a)
     
reverse_list([1,2,3,4,5,6,7])

2>
Q:
WAF: count_even_odd() that counts and returns how many numbers are even and how
many are odd in a list of numbers passed as argument.
A:
def count_even_odd(a):
    even_count = 0
    odd_count = 0
    for i in a:
        if i % 2 ==0:
            even_count += 1
        else:
            odd_count += 1
    return (even_count, odd_count)
count_even_odd([12,33,1,3,4,7,9,7,5,3,1])

3>
Q:
WAF: maximum() to return the largest number in a list of numbers (do not use max
function). Function takes a list or tuple of numbers as argument.
A:
def maximum(a):
    for i in range(0,len(a)-1):
        if a[i] > a[i + 1]:
            t = a[i+1]
            a[i+1] = a[i]
            a[i] = t
    return(a[-1])
maximum([2,56,4,9,12,58])

4>
Q:
WAF: second_maximum() Create a new version of above code to return the second largest
number.

A:

5>
Q:
WAF: mean() that returns the mean of list of numbers passed to the function as argument.
A:
def mean(a):
    l = len(a)
    total = 0
    for i in a:
        total += i
    return(total/l)
mean([23,4,5,34,56])

6>
Q:
WAF: find_in_range() that takes a three arguments:
a list of numbers, start, end
The function returns a list of numbers from the original list, which lie between start and
end.
Ex: find_in_range([3,10, 5, 8, 2, 7], 5, 9)
List of numbers = [3,10, 5, 8, 2, 7]
start = 5
end = 9
list returned should be [5, 8, 7]
A:
def find_in_range(a,b,c):
    d = []
    for i in a:
        if b<=i<c:
            d.append(i)
    return (d)
            
find_in_range([3,10, 5, 8, 2, 7], 5, 9)